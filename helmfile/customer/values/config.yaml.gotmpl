portalFqdn: {{ .Values.portalFqdn }}
clusterDomain: {{ .Values.clusterDomain }}

image:
  repository: {{ .Values.image.repository }}
  tag: {{ .Values.image.tag }}
  pullPolicy: IfNotPresent
  pullSecret:
    name: {{ .Values.image.pullSecret.name }}
    repositoryUrl: {{ .Values.image.pullSecret.repositoryUrl }}
    create: false
    user: {{ .Values.image.pullSecret.user }}
    password: {{ .Values.image.pullSecret.password }}

customer:
  id: {{ .Values.customer.id }}
  name: {{ .Values.customer.name | quote }}
  admin:
    fname: {{ .Values.customer.admin.fname | quote }}
    mname: {{ .Values.customer.admin.mname | quote }}
    lname: {{ .Values.customer.admin.lname | quote }}
    login: {{ .Values.customer.admin.login | quote }}
    email: {{ .Values.customer.admin.email | quote }}
    password: {{ .Values.customer.admin.password | quote }}

encryptionKeys:
  fernet: {{ .Values.encryptionKeys.fernet }}
  privateKey: |
{{ .Values.encryptionKeys.privateKey | indent 4 }}
  publicKey: |
{{ .Values.encryptionKeys.publicKey | indent 4 }}
  privateKeyPassword: {{ .Values.encryptionKeys.privateKeyPassword }}
  configClientSecret: {{ .Values.encryptionKeys.configClientSecret }}
  superAdminSecret: {{ .Values.superAdminSecret }}

modelsFolder: /training/models
scenarioGroups: ""

qdb:
  host: {{ .Values.qdb.host }}.{{ .Values.serverNamespace }}.svc.{{ .Values.clusterDomain }}
  user: {{ .Values.qdb.user }}
  password: {{ .Values.qdb.password }}

hydra:
  apiUrl: http://hydra.{{ .Values.serverNamespace }}.svc.{{ .Values.clusterDomain }}:4445
  internalPublicUrl: http://hydra.{{ .Values.serverNamespace }}.svc.{{ .Values.clusterDomain }}:4444

redis:
  url: "redis://redis.{{ .Values.serverNamespace }}.svc.{{ .Values.clusterDomain }}:6379"

configApi:
  url: "http://config-api.{{ .Values.serverNamespace }}.svc.{{ .Values.clusterDomain }}:5000/v1"
  clientId: config_api_backendapp

managementApi:
  url: "http://mgmt-api.{{ .Values.serverNamespace }}.svc.{{ .Values.clusterDomain }}:5000/v1"

dataApi:
  url: "http://data-api.{{ .Values.serverNamespace }}.svc.{{ .Values.clusterDomain }}:5000/v1"

h5serv:
  url: "http://h5serv.{{ .Values.serverNamespace }}.svc.{{ .Values.clusterDomain }}:5000"

portal:
  licensePublicKeyPath: /opt/quantotto/keys/license_public_key.pem
  asys:
    listenOn: "portal-{{ .Values.customer.id }}:15100"
    master: "portal-{{ .Values.customer.id }}:15100"
    portsRange: "15101-15299"

triggersRunner:
  asys:
    listenOn: "triggers-runner-{{ .Values.customer.id }}:15100"
    master: "triggers-runner-{{ .Values.customer.id }}:15100"
    portsRange: "15101-15299"

facesRecognizer:
  asys:
    listenOn: "faces-recognizer-{{ .Values.customer.id }}:15100"
    master: "faces-recognizer-{{ .Values.customer.id }}:15100"
    portsRange: "15101-15299"
  knownFacesGroup: ""
  faceClassifierName: "trackfaces"
