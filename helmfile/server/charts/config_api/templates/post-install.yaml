apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}"
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      name: "{{ .Release.Name }}"
      labels:
        app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
        helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    spec:
      restartPolicy: Never
      volumes:
      - name: full-myconfig-data
        secret:
          secretName: config-api-files
          items:
          - key: fullmyconfig.yaml
            path: fullmyconfig.yaml
      containers:
      - name: pre-configure
        image: "{{ .Values.image.repository }}/app_base:{{ .Values.image.tag }}"
        envFrom:
        - configMapRef:
            name: api-common
        - secretRef:
            name: common
        - secretRef:
            name: config-super-admin
        command:
        - python
        - "scripts/k8s_config.py"
        - "/myconfig/fullmyconfig.yaml"
        - {{ .Values.portalFqdn | quote }}
        volumeMounts:
        - name: full-myconfig-data
          mountPath: /myconfig
      imagePullPolicy: Always
      imagePullSecrets:
      - name: {{ .Values.image.pullSecret | quote }}