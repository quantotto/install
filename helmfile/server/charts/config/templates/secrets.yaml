{{ if and .Values.image.pullSecret.name .Values.image.pullSecret.create -}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.image.pullSecret.name }}
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: {{ template "imagePullSecret" . }}
{{- end }}
---
apiVersion: v1
kind: Secret
metadata:
  name: common
  annotations:
    helm.sh/hook: "pre-install"
    helm.sh/hook-delete-policy: "before-hook-creation"
type: Opaque
data:
  FERNET_KEY: {{ .Values.encryptionKeys.fernet | b64enc | quote }}
  HYDRA_CONFIG_CLIENT_SECRET: {{ randAlphaNum 32 | nospace | b64enc | quote }}
  PRIVATE_KEY_PASSWORD: {{ .Values.encryptionKeys.privateKeyPassword | b64enc | quote }}
---
apiVersion: v1
kind: Secret
metadata:
  name: config-super-admin
  annotations:
    helm.sh/hook: "pre-install"
    helm.sh/hook-delete-policy: "before-hook-creation"
type: Opaque
data:
  HYDRA_SUPER_ADMIN_SECRET: {{ randAlphaNum 32 | nospace | b64enc | quote }}
---
apiVersion: v1
kind: Secret
metadata:
  name: hydra-secret
  annotations:
    helm.sh/hook: "pre-install"
    helm.sh/hook-delete-policy: "before-hook-creation"
type: Opaque
data:
  secretsSystem: {{ randAlphaNum 32 | nospace | b64enc | quote }}
  secretsCookie: {{ randAlphaNum 32 | nospace | b64enc | quote }}
  dsn: {{ printf "postgres://%s:%s@%s:%d/hydra?sslmode=disable" .Values.qdb.user .Values.qdb.password .Values.qdb.host (int64 .Values.qdb.port) | b64enc | quote }}
---
apiVersion: v1
kind: Secret
metadata:
  name: config-api-files
type: Opaque
stringData:
  myconfig.yaml: |
    Configuration:
      DB:
        system_type: DB
        driver: postgres
        host: {{ .Values.qdb.host }}
        port: {{ .Values.qdb.port }}
        user: {{ .Values.qdb.user }}
        password: {{ .Values.qdb.password | quote }}
        parameters:
        - param_name: database_name
          param_value: surveillance
  fullmyconfig.yaml: |
    Configuration:
      DB:
        system_type: DB
        driver: postgres
        host: {{ .Values.qdb.host }}
        port: {{ .Values.qdb.port }}
        user: {{ .Values.qdb.user }}
        password: {{ .Values.qdb.password | quote }}
        parameters:
        - param_name: database_name
          param_value: surveillance
      FS:
        system_type: FS
        driver: quantotto.data_access.store_drivers.mongo_db_store.MongoDBFrameStore
        host: {{ .Values.mongodb.host }}
        user: {{ .Values.mongodb.user }}
        password: {{ .Values.mongodb.password | quote }}
        port: {{ .Values.mongodb.port }}
        parameters:
        - param_name: crypto_driver
          param_value: quantotto.data_access.store_drivers.crypto.DefaultFrameCrypto
        - param_name: database
          param_value: {{ .Values.mongodb.database }}
        - param_name: days_to_keep
          param_value: {{ .Values.retentionDays }}
      GDB:
        system_type: GDB
        driver: quantotto.data_access.graph_db.Neo4j
        host: neo4j
        port: 7687
        user: neo4j
        password: {{ .Values.neo4j.password }}
        parameters: []
      MQ:
        system_type: MQ
        driver: quantotto.message_queue.rabbitmq_connector.RabbitmqConnector
        host: rabbitmq
        parameters:
        - param_name: exchange_topic
          param_value: incidents
        user: guest
        password: guest
        port: 5672
      TDB:
        system_type: TDB
        driver: influxdb.InfluxDBClient
        host: influxdb
        port: 8086
        user: root
        password: root
        parameters:
        - param_name: database_name
          param_value: surveillance
      LDAPConfig:
        URI: {{ .Values.openldap.uri }}
        BaseDN: dc=quantotto,dc=io
        AdminDN: cn=admin,dc=quantotto,dc=io
        AdminPassword: {{ .Values.openldap.adminPassword }}
        GroupDN: cn=quantotto,ou=groups,dc=quantotto,dc=io
      Auth:
        ClientID: qmc_client
        Issuer: "https://{{ .Values.portalFqdn }}/hydra-public/"
---
apiVersion: v1
kind: Secret
metadata:
  name: private-key
type: Opaque
data:
  private.key: {{ .Values.encryptionKeys.privateKey | b64enc | quote }}
  public.key: {{ .Values.encryptionKeys.publicKey | b64enc | quote }}
---
apiVersion: v1
kind: Secret
metadata:
  name: certs
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-delete-policy": "before-hook-creation"
type: kubernetes.io/tls
data:
{{ ( include "gen-certs" . ) | indent 2 }}
---
apiVersion: v1
kind: Secret
metadata:
  name: qdb
type: Opaque
data:
  user: {{ .Values.qdb.user | b64enc | quote }}
  password: {{ .Values.qdb.password | b64enc | quote }}

