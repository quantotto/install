{{ if and .Values.image.pullSecret.name .Values.image.pullSecret.create -}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.image.pullSecret.name }}
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: {{ template "imagePullSecret" . }}
{{- end }}
---
apiVersion: v1
kind: Secret
metadata:
  name: common
type: Opaque
data:
  FERNET_KEY: {{ .Values.keys.fernet | b64enc | quote }}
  HYDRA_CONFIG_CLIENT_SECRET: {{ .Values.configApi.clientSecret | b64enc | quote }}
  PRIVATE_KEY_PASSWORD: {{ .Values.keys.privateKeyPassword | b64enc | quote }}
---
apiVersion: v1
kind: Secret
metadata:
  name: hydra-secret
  annotations:
    helm.sh/hook: "pre-install"
    helm.sh/hook-delete-policy: "before-hook-creation"
type: Opaque
data:
  secretsSystem: {{ .Values.hydra.systemSecret | b64enc | quote }}
  secretsCookie: {{ .Values.hydra.systemCookie | b64enc | quote }}
  dsn: {{ printf "postgres://%s:%s@%s:%d/hydra?sslmode=disable" .Values.qdb.user .Values.qdb.password .Values.qdb.host (int64 .Values.qdb.port) | b64enc | quote }}
---
apiVersion: v1
kind: Secret
metadata:
  name: config-api-files
type: Opaque
stringData:
  myconfig.yaml: |-
    Configuration:
      DB:
        driver: postgres
        host: qdb
        port: {{ .Values.qdb.port }}
        user: {{ .Values.qdb.user }}
        password: {{ .Values.qdb.password | quote }}
        parameters:
        - param_name: database_name
          param_value: surveillance
---
apiVersion: v1
kind: Secret
metadata:
  name: private-key
type: Opaque
data:
  private.key: |
    {{ .Values.keys.privateKey | b64enc }}
---
apiVersion: v1
kind: Secret
metadata:
  name: certs
type: kubernetes.io/tls
data:
  tls.crt: |
    {{ .Values.cert.fullChain | b64enc }}
  tls.key: |
    {{ .Values.cert.privateKey | b64enc }}
---
apiVersion: v1
kind: Secret
metadata:
  name: qdb
type: Opaque
data:
  user: {{ .Values.qdb.user | b64enc | quote }}
  password: {{ .Values.qdb.password | b64enc | quote }}

